{"version":3,"file":"bundle.js","sources":["../src/doc/11.TypeScript类/1.类的属性和方法.ts","../src/main.ts"],"sourcesContent":["export default class Greeter {\r\n    // 静态属性\r\n    static cname:string = \"Greeter\";\r\n    // 成员属性\r\n    greeting:string;\r\n    // 构造函数\r\n    constructor(message:string) {\r\n        this.greeting = message\r\n    }\r\n    // 静态方法\r\n    static getClassName (){\r\n        return \"Class name is Greeter\"\r\n    }\r\n    // 成员方法\r\n    greet(){\r\n        return \"hello, \"+this.greeting;\r\n    }\r\n}\r\n\r\n// 编译出来的\r\n\r\nvar Greeter1 = /** @class */ (function () {\r\n    // 构造函数\r\n    function Greeter(message) {\r\n        // @ts-ignore\r\n        this.greeting = message;\r\n    }\r\n    // 静态方法,静态的直接挂\r\n    Greeter.getClassName = function () {\r\n        return \"Class name is Greeter\";\r\n    };\r\n    // 成员方法,成员的挂原型上\r\n    Greeter.prototype.greet = function () {\r\n        return \"hello, \" + this.greeting;\r\n    };\r\n    // 静态属性\r\n    Greeter.cname = \"Greeter\";\r\n    return Greeter;\r\n}());\r\n","import Greeter from \"./doc/11.TypeScript类/1.类的属性和方法\";\r\n\r\nconst greeter = new Greeter('me')\r\nconsole.log(greeter.greeting)\r\n\r\n"],"names":[],"mappings":";;;UAAqB,OAAO;;QAMxB,YAAY,OAAc;YACtB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAA;SAC1B;;QAED,OAAO,YAAY;YACf,OAAO,uBAAuB,CAAA;SACjC;;QAED,KAAK;YACD,OAAO,SAAS,GAAC,IAAI,CAAC,QAAQ,CAAC;SAClC;;IAfD;IACO,aAAK,GAAU,SAAS;;ICAnC,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,CAAA;IACjC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC;;;;;;"}